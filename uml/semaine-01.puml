@startuml
left to right direction

skinparam backGroundColor Ivory
skinparam linetype ortho
skinparam shadowing true
skinparam class {
BackgroundColor LightYellow
BorderColor MidnightBlue
}

class Main {
}

package Entites {
    package Personnages {
        class Personnage {
            - m_nom : String
            - m_race : Race
            - m_classe : Classe
            - m_caracteristiques : Caracteristique
            - m_inventaire : ArrayList<Objet>
            + <<Create>> Personnage(nom : String, race : Race, classe : Classe)
            + getNom() : String
            + afficherInventaire() : String
            + afficherSituation() : void
        }

        package Races {
            interface Race {
                + getRace() : String
            }

            class Elfe {
                + getRace() : String
            }

            class Halfelin {
                + getRace() : String
            }

            class Humain {
                + getRace() : String
            }

            class Nain {
                + getRace() : String
            }

            Elfe ..|> Race
            Halfelin ..|> Race
            Humain ..|> Race
            Nain ..|> Race
        }

        Personnage --> Race : utilise

        package Classes {
            interface Classe {
                + getPvDepart() : int
                + getEquipementDepart() : ArrayList<Objet>
            }

            class Clerc {
                - pvDepart : int = 16
            }
            class Guerrier {
                - pvDepart : int = 20
            }
            class Magicien {
                - pvDepart : int = 12
            }
            class Roublard {
                - pvDepart : int = 16
            }

            Clerc ..|> Classe
            Guerrier ..|> Classe
            Magicien ..|> Classe
            Roublard ..|> Classe
        }
    }

    class MaitreJeu {
        - tour : ArrayList<String>
        + <<Create>> MaitreJeu()
        + ajouterLignes(phrase : String) : void
        + raconterTour() : void
    }

    Personnage --> Classe : utilise

    package Monstres {
        class Monstre {
            - m_espece : String
            - m_numero : int
            - m_attaque : Attaque
            - m_caracteristiques : ArrayList<Caracteristique>
            + <<Create>> Monstre(espece : String, numero : int, attaque : Attaque, caracteristiques : ArrayList<Caracteristique>)
        }
    }

    package Caracteristiques {
        class Caracteristique {
            - m_pv : int
            - m_force : int
            - m_dexterite : int
            - m_vitesse : int
            - m_initiative : int

            + <<Create>> Caracteristique(pv : int, force : int, dexterite : int, vitesse : int, initiative : int)
            + getPv() : int
            + getForce() : int
            + getDexterite() : int
            + getVitesse() : int
            + getInitiative() : int
            + changerPv(changement : int) : void
            + changerForce(changement : int) : void
            + changerDexterite(changement : int) : void
            + changerVitesse(changement : int) : void
            + changerInitiative(changement : int) : void
        }

        class CaracteristiqueMonstre {
            - m_classeArmure : int
            + <<Create>> CaracteristiqueMonstre(pv : int, force : int, dexterite : int, vitesse : int, initiative : int, classeArmure : int)
            + getClasseArmure() : int
            + changerClasseArmure(changement : int) : void
        }

        Caracteristique --> CaracteristiqueMonstre
    }

    Monstre --> CaracteristiqueMonstre : utilise
    Personnage --> Caracteristique : utilise
}

package Objets {
    interface Objet {
        + getNom() : String
        + estEquipe() : boolean
    }

    package Armes {
        class Arme {
            - m_nom : String
            - m_porte : int
            + <<Create>> Arme(nom : String, porte : int)
            + getPorte() : int
            + getNom() : String
            + estEquipe() : boolean
        }
        Arme ..|> Objet

        class ArmeGuerre {
            + <<Create>> ArmeGuerre(nom : String, porte : int)
        }
        class ArmeDistance {
            + <<Create>> ArmeDistance(nom : String, porte : int)
        }
        class ArmeCourante {
            + <<Create>> ArmeCourante(nom : String, porte : int)
        }

        ArmeCourante --|> Arme
        ArmeGuerre --|> Arme
        ArmeDistance --|> Arme
    }

    package Armures {
        class Armure {
            - m_nom : String
            - m_classe : int
            + <<Create>> Armure(nom : String, classe : int)
            + getClasse() : int
            + getNom() : String
            + estEquipe() : boolean
        }
        Armure ..|> Objet

        class ArmureLegere {
            + <<Create>> ArmureLegere(nom : String, classe : int)
        }
        class ArmureLourde {
            + <<Create>> ArmureLourde(nom : String, classe : int)
        }

        ArmureLegere --|> Armure
        ArmureLourde --|> Armure
    }
}

Personnage --> Objet : utilise

package Donjons {
    class Donjon {
        + afficherCarte() : void
        + <<Create>> Donjon()
    }
}

package Des {
    class De {
        + {static} lancer(nbDes : int, nbFaces : int) : int
    }
}

package Tours {
    class Action {
    }

    class Attaquer {
    }

    class Deplacer {
    }

    class Equiper {
    }

    class Tour {
    }
}

@enduml
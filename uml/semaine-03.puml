@startuml
skinparam backGroundColor Ivory
skinparam linetype ortho
skinparam shadowing true
skinparam groupInheritance 2
skinparam class {
    BackgroundColor LightYellow
    BorderColor MidnightBlue
}

' Packages
package DED {
    package Addon {
        class De {
            + De(int nbDes, int nbFaces)
            + int lancer()
            + int get_nbDes()
            + int get_nbFaces()
        }

        class Scan {
            - static Scanner scanner
            + static String ScanLine()
        }
    }
    package Entites {
        package Personnages {
            class Personnage {
                - String m_nom
                - Race m_race
                - Classe m_classe
                - Caracteristique m_caracteristiques
                - ArrayList<Objet> m_inventaire
                - Arme m_armeEquipe
                - Armure m_armureEquipe
                + Personnage(String nom, Race race, Classe classe)
                + String getNom()
                + Classe getClasse()
                + Race getRace()
                + String afficherInventaire()
                + Arme getArmeEquipe()
                + Armure getArmureEquipe()
                + void attaquer(Monstre pasGentil)
                + void afficherSituation()
            }

            package Classes {
                class Classe {
                    + ArrayList<Objet> getEquipementDepart()
                    + int getPvDepart()
                }
                class Clerc {
                        - pvDepart : int = 16
                        + getPvDepart() : int
                        + getEquipementDepart() : ArrayList<Objet>
                }
                class Guerrier {
                        - pvDepart : int = 20
                        + getPvDepart() : int
                        + getEquipementDepart() : ArrayList<Objet>
                    }
                class Magicien {
                        - pvDepart : int = 12
                        + getPvDepart() : int
                        + getEquipementDepart() : ArrayList<Objet>
                    }

                class Roublard {
                        - pvDepart : int = 16
                        + getPvDepart() : int
                        + getEquipementDepart() : ArrayList<Objet>
                    }
            }
            package Races {
                class Race {
                    + int getPvBonus()
                }
                class Elfe {
                    + getRace() : String
                    + getPvAugmente() : int
                    + getForceAugmentee() : int
                    + getDexteriteAugmentee() : int
                    + getVitesseAugmentee() : int
                    + getInitiativeAugmentee() : int
                }
                class Halfelin {
                    + getRace() : String
                    + getPvAugmente() : int
                    + getForceAugmentee() : int
                    + getDexteriteAugmentee() : int
                    + getVitesseAugmentee() : int
                    + getInitiativeAugmentee() : int
                }
                class Humain {
                    + getRace() : String
                    + getPvAugmente() : int
                    + getForceAugmentee() : int
                    + getDexteriteAugmentee() : int
                    + getVitesseAugmentee() : int
                    + getInitiativeAugmentee() : int
                }
                class Nain {
                    + getRace() : String
                    + getPvAugmente() : int
                    + getForceAugmentee() : int
                    + getDexteriteAugmentee() : int
                    + getVitesseAugmentee() : int
                    + getInitiativeAugmentee() : int
                }
            }

            class MaitreJeu {
                - static tour : ArrayList<String>
                + MaitreJeu()
                + static ajouterLignes(phrase : String) : void
                + raconterTour() : void
                + creerDonjon() : void
            }
        }

        class Monstre {
            + String getNom()
            + void diminuerVie(int degats)
        }

        package Caracteristiques {
            class Caracteristique {
                + static Caracteristique creerCaracteristique(Personnage p)
                + int getPv()
                + int getForce()
                + int getDexterite()
                + int getVitesse()
            }

            class CaracteristiqueMonstre {
                - m_classeArmure : int
                + getClasseArmure() : int
                + changerClasseArmure(changement : int) : void
            }
        }
    }

    package Objets {
        interface Objet {
            + String getNom()
            + boolean estEquipe()
        }
        package Armes {
            class Arme {
                - String m_nom
                - int m_porte
                - De m_deAttaque
                + Arme(String nom, int porte, De deAttaque)
                + int getPorte()
                + int getDegat()
                + De getDeAttaque()
                + static Arme sansArme()
                + String getNom()
                + boolean estEquipe()
            }
            class Poing
            package ArmeCourantes {
                class ArmeCourante
                class Baton
                class MasseArme
            }
            package ArmeDistances {
                class ArmeDistance
                class ArbaleteLegere
                class ArcCourt
                class Fronde
            }
            package ArmeGuerres {
                class ArmeGuerre
                class EpeeLongue
                class Rapiere
            }
        }
        package Armures {
            class Armure{
                - String m_nom
                - int m_classeArmure
                + Armure(String nom, int classeArmure)
                + String getNom()
                + int getClasse()
                + boolean estEquipe()
                + static Armure sansArmure()
            }
            class Nu
            package ArmureLegeres {
                class ArmureLegere
                class ArmureEcailles
                class DemiPlate
            }
            package ArmureLourdes {
                class ArmureLourde
                class CotteMailles
                class Harnois
            }
        }
    }

    class Main {
        + static void main(String[] args)
    }

    package Donjons {
        class Donjon {
            - m_x : int
            - m_y : int
            - m_donjon : String[][]
            - m_donjon_objets : Objet[][]
            - m_alphabet : ArrayList<String>
            + Donjon(x : int, y : int)
            + creationObstacle() : void
            + placerPersonnage(personnage : Personnage) : void
            + placerMonstre(monstre : Monstre) : void
            + placerEquipement(objet : Objet) : void
            + afficherCarte() : void
        }
    }
}

' Relations principales
Personnage *-up- Race
Personnage *-up- Classe
Personnage *-down- Caracteristique
Personnage *-left- Arme
Personnage *-left- Armure
Personnage *-down- Objet
Monstre *-right- CaracteristiqueMonstre

' Héritage des classes
  ' Classe
  Clerc ..|> Classe
  Guerrier ..|> Classe
  Magicien ..|> Classe
  Roublard ..|> Classe

  ' Race
  Elfe ..|> Race
  Halfelin ..|> Race
  Humain ..|> Race
  Nain ..|> Race

' Hiérarchie des Armes
  Arme --|> ArmeCourante
    ArmeCourante --|> Baton
    ArmeCourante --|> MasseArme

  Arme -left-|> Poing

  Arme --|> ArmeDistance
    ArmeDistance --|> ArbaleteLegere
    ArmeDistance --|> ArcCourt
    ArmeDistance --|> Fronde

  Arme --|> ArmeGuerre
    ArmeGuerre --|> EpeeLongue
    ArmeGuerre --|> Rapiere

' Hiérarchie des Armures
  Armure --|> ArmureLegere
    ArmureLegere --|> ArmureEcailles
    ArmureLegere --|> DemiPlate

  Armure --|> ArmureLourde
    ArmureLourde --|> CotteMailles
    ArmureLourde --|> Harnois

  Armure -left-|> Nu

' Liens entre objets et interfaces
Objet ..|> Arme
Objet ..|> Armure
De -down-> Armure : utilise
De -down-> Arme : utilise

' Interactions entre entités
Personnage .down.> Monstre : attaque
Scan <-down- Personnage : utilise

Scan <-down- MaitreJeu : utilise
MaitreJeu -up-> Objets : utilise
Donjon -down-> MaitreJeu : utilise
De <-down- MaitreJeu : utilise

Main -down-> Entites : crée
Main -down-> MaitreJeu : crée
Main -down-> Scan : utilise

Entites .left.> Objets : utilise
Donjon .down.> Entites : utilise


@enduml

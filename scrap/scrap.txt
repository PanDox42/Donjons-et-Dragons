class Personnage
- string m_nom
- <Race> m_race
- <Classe> m_classe
- int m_pointDeVie
- int m_force
- int m_dexterite
- int m_vitesse
- int m_initiative
- <Objet>[] m_inventaire
- <Objet>[] m_equipement

func Personnages(string nom, <Race> race, <Classe> classe)
	m_nom = nom
	m_race = race
	m_classe = classe
	m_pointDeVie = classe.getPointDeVie() + race.getPointDeVie()
	m_force = classe.getForce() + race.getForce()
	m_dexterite = classe.getDexterite() + race.getDexterite()
	m_vitesse = classe.getVitesse() + race.getVitesse()
	m_initiative = classe.getInitiative() + race.getInitiative()
	
func int getPointDeVie() -> retourne le nombre de points de vie du personnage
func int getForce() -> retourne le bonus de force lors de l'utilisation d'une arme de corps à corps
func int getDexterite() -> retourne le bonus de dextérité lors de l'utilisation de armes à distance
func int getVitesse() -> retourne la vitesse du Personnage
func int getInitiative() -> retourne l'initiative du personnage (ordre dans lequel il jouera dans un combat)
func void diminuerVitesse(int diminution)
func void diminuerForce(int diminution)

-------------------------------------

interface Objet

-------------------------------------

interface Armure
func int getClasse()

-------------------------------------

interface Arme
func int getPorte()

-------------------------------------

class ArmureLegere implements Objet, Armure extends BaseArmure
- string m_nom
- int m_classe
func ArmureLegere(string nom, int classe)
	m_nom = nom
	m_classe = classe
func int getClasse()

-------------------------------------

class ArmureLourde implements Objet, Armure extends BaseArmure
- string m_nom
- int m_classe
func ArmureLourde(string nom, int classe)
	m_nom = nom
	m_classe = classe
func int getClasse()

-------------------------------------

class ArmeCourante implements Objet, Arme extends BaseArme
- string m_nom
- int m_classe
func ArmeCourante(string nom, int classe)
	m_nom = nom
	m_classe = classe
func int getClasse()

-------------------------------------

class ArmeGuerre implements Objet, Arme extends BaseArme
- string m_nom
- int m_classe
func ArmeGuerre(string nom, int classe)
	m_nom = nom
	m_classe = classe
func int getClasse()

-------------------------------------

class ArmeDistance implements Objet, Arme extends BaseArme
- string m_nom
- int m_classe
func ArmeDistance(string nom, int classe)
	m_nom = nom
	m_classe = classe
func int getClasse()

-------------------------------------

interface Race
func int getPointDeVie()
func int getForce()
func int getDexterite()
func int getVitesse()
func int getInitiative()

-------------------------------------

class BaseRace
- int m_pointDeVie = 0
- int m_force = 0
- int m_dexterite = 0
- int m_vitesse = 0
- int m_initiative = 0
func int getPointDeVie()
func int getForce()
func int getDexterite()
func int getVitesse()
func int getInitiative()

-------------------------------------

class Elfe extends BaseRace implements Race
- int m_dexterite = 6

-------------------------------------

class Halfelin extends BaseRace implements Race
- int m_dexterite = 4
- int m_vitesse = 2

-------------------------------------

class Humain extends BaseRace implements Race
- int m_pointDeVie = 2
- int m_force = 2
- int m_dexterite = 2
- int m_vitesse = 2
- int m_initiative = 2

-------------------------------------

class Nain extends BaseRace implements Race
- int m_force = 6

-------------------------------------

interface Classe
func int getPointDeVie()

-------------------------------------

class BaseClasse
- int m_pointDeVie = 0
- <Objet>[] m_equipement = 
func int getPointDeVie()





























